<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAB1AJwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8
        XLVtrY5yf/rVZifbx3NUw/zDHBq3G3SsfmelcmWTYDx70/c1RlwR2pN7f3jR8wJdzelIZNp6VHvb+8aU
        Pg8n86PmA0tsXn0xUZO3bz19KkkfIH1qMncee3Si6GAbn71U2OJN34VYupWVlw2OO1V3OFHsaPmIZI2V
        aoi2F3bulSSPlD61GVyvLDFF13BySIJU2ovzDr2phfbt9zip7nhAP7vaq7/db25HsaPmYlWX/Vt9P6Go
        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
        hn15oY4PQUUVURx1Z//Z
</value>
  </data>
</root>